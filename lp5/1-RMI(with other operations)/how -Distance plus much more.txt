1.7 iles to Kilometer Conversion Server: Implement multi-threaded client/server Process 
communication using RMI for Miles to Kilometer Conversion Server. 
		double miles;

		Scanner in = new Scanner(System.in);

		System.out.println("Please enter miles:");
		miles = in.nextDouble();

		double kilometers = miles * 1.6;

		System.out.println(kilometers + " Kilometers");

1.8 Echo Server:  Implement multi-threaded client/server Process communication using 
RMI for Printing Name Appending to Hello 

1.9 Compare 2 Strings:  Implement multi-threaded client/server Process communication 
using RMI for Comparing 2 Strings and Return lexicographically Largest string. 
public static int stringCompare(String str1,  
                                    String str2)  
    {  
        for (int i = 0; i < str1.length() &&  
                    i < str2.length(); i++) {  
            if ((int)str1.charAt(i) ==  
                (int)str2.charAt(i)) {  
                continue;  
            }  
            else {  
                return (int)str1.charAt(i) -  
                    (int)str2.charAt(i);  
            }  
        }  
  
        // Edge case for strings like  
        // String 1="Geeky" and String 2="Geekyguy"  
        if (str1.length() < str2.length()) {  
            return (str1.length()-str2.length());  
        }  
        else if (str1.length() > str2.length()) {  
            return (str1.length()-str2.length());  
        }  
          
        // If none of the above conditions is true,  
        // it implies both the strings are equal  
        else {  
            return 0;  
        }  
    }  

1.10 Count Vowels:  Implement multi-threaded client/server Process communication using 
RMI for Counting Vowels Present in Word. 
public static void main(String[] args) {
		String s = "prepinsta";
		char[] c = s.toCharArray();
		int vowel=0;
		
		for (int i = 0; i < s.length(); i++) { 
            if(s.charAt(i)=='a' || s.charAt(i)=='e' || s.charAt(i)=='i' || s.charAt(i)=='o' || s.charAt(i)=='u') 
                vowel++; 
		}
  
	System.out.println("Vowels: " + vowel);
    }

1.11 Factorial of Number: Implement multi-threaded client/server Process communication 
using RMI for Find factorial of Number. 

class FactorialExample2{  
 static int factorial(int n){    
  if (n == 0)    
    return 1;    
  else    
    return(n * factorial(n-1));    
 }    
 public static void main(String args[]){  
  int i,fact=1;  
  int number=4;//It is the number to calculate factorial    
  fact = factorial(number);   
  System.out.println("Factorial of "+number+" is: "+fact);    
 }  
}  